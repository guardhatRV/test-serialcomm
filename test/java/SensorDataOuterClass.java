// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SensorData.proto

package test;

public final class SensorDataOuterClass {
  private SensorDataOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SensorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:test.Sensor)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .test.Sensor.SensorType sensorType = 1 [default = UNKNOWN];</code>
     */
    boolean hasSensorType();
    /**
     * <code>required .test.Sensor.SensorType sensorType = 1 [default = UNKNOWN];</code>
     */
    test.SensorDataOuterClass.Sensor.SensorType getSensorType();

    /**
     * <code>required float value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>required float value = 2;</code>
     */
    float getValue();
  }
  /**
   * Protobuf type {@code test.Sensor}
   */
  public  static final class Sensor extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:test.Sensor)
      SensorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Sensor.newBuilder() to construct.
    private Sensor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Sensor() {
      sensorType_ = 0;
      value_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Sensor(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              test.SensorDataOuterClass.Sensor.SensorType value = test.SensorDataOuterClass.Sensor.SensorType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                sensorType_ = rawValue;
              }
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              value_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return test.SensorDataOuterClass.internal_static_test_Sensor_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return test.SensorDataOuterClass.internal_static_test_Sensor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              test.SensorDataOuterClass.Sensor.class, test.SensorDataOuterClass.Sensor.Builder.class);
    }

    /**
     * Protobuf enum {@code test.Sensor.SensorType}
     */
    public enum SensorType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNKNOWN = 0;</code>
       */
      UNKNOWN(0),
      /**
       * <code>O2 = 1;</code>
       */
      O2(1),
      /**
       * <code>CO = 2;</code>
       */
      CO(2),
      /**
       * <code>H2S = 3;</code>
       */
      H2S(3),
      /**
       * <code>HCN = 4;</code>
       */
      HCN(4),
      /**
       * <code>TEMPERATURE = 5;</code>
       */
      TEMPERATURE(5),
      /**
       * <code>HUMIDITY = 6;</code>
       */
      HUMIDITY(6),
      /**
       * <code>AMBIENTLIGHT = 7;</code>
       */
      AMBIENTLIGHT(7),
      /**
       * <code>PRESSURE = 8;</code>
       */
      PRESSURE(8),
      /**
       * <code>AMBIENTNOISE = 9;</code>
       */
      AMBIENTNOISE(9),
      ;

      /**
       * <code>UNKNOWN = 0;</code>
       */
      public static final int UNKNOWN_VALUE = 0;
      /**
       * <code>O2 = 1;</code>
       */
      public static final int O2_VALUE = 1;
      /**
       * <code>CO = 2;</code>
       */
      public static final int CO_VALUE = 2;
      /**
       * <code>H2S = 3;</code>
       */
      public static final int H2S_VALUE = 3;
      /**
       * <code>HCN = 4;</code>
       */
      public static final int HCN_VALUE = 4;
      /**
       * <code>TEMPERATURE = 5;</code>
       */
      public static final int TEMPERATURE_VALUE = 5;
      /**
       * <code>HUMIDITY = 6;</code>
       */
      public static final int HUMIDITY_VALUE = 6;
      /**
       * <code>AMBIENTLIGHT = 7;</code>
       */
      public static final int AMBIENTLIGHT_VALUE = 7;
      /**
       * <code>PRESSURE = 8;</code>
       */
      public static final int PRESSURE_VALUE = 8;
      /**
       * <code>AMBIENTNOISE = 9;</code>
       */
      public static final int AMBIENTNOISE_VALUE = 9;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SensorType valueOf(int value) {
        return forNumber(value);
      }

      public static SensorType forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN;
          case 1: return O2;
          case 2: return CO;
          case 3: return H2S;
          case 4: return HCN;
          case 5: return TEMPERATURE;
          case 6: return HUMIDITY;
          case 7: return AMBIENTLIGHT;
          case 8: return PRESSURE;
          case 9: return AMBIENTNOISE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<SensorType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          SensorType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<SensorType>() {
              public SensorType findValueByNumber(int number) {
                return SensorType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return test.SensorDataOuterClass.Sensor.getDescriptor().getEnumTypes().get(0);
      }

      private static final SensorType[] VALUES = values();

      public static SensorType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private SensorType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:test.Sensor.SensorType)
    }

    private int bitField0_;
    public static final int SENSORTYPE_FIELD_NUMBER = 1;
    private int sensorType_;
    /**
     * <code>required .test.Sensor.SensorType sensorType = 1 [default = UNKNOWN];</code>
     */
    public boolean hasSensorType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .test.Sensor.SensorType sensorType = 1 [default = UNKNOWN];</code>
     */
    public test.SensorDataOuterClass.Sensor.SensorType getSensorType() {
      test.SensorDataOuterClass.Sensor.SensorType result = test.SensorDataOuterClass.Sensor.SensorType.valueOf(sensorType_);
      return result == null ? test.SensorDataOuterClass.Sensor.SensorType.UNKNOWN : result;
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private float value_;
    /**
     * <code>required float value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required float value = 2;</code>
     */
    public float getValue() {
      return value_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSensorType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, sensorType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, value_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, sensorType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, value_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof test.SensorDataOuterClass.Sensor)) {
        return super.equals(obj);
      }
      test.SensorDataOuterClass.Sensor other = (test.SensorDataOuterClass.Sensor) obj;

      boolean result = true;
      result = result && (hasSensorType() == other.hasSensorType());
      if (hasSensorType()) {
        result = result && sensorType_ == other.sensorType_;
      }
      result = result && (hasValue() == other.hasValue());
      if (hasValue()) {
        result = result && (
            java.lang.Float.floatToIntBits(getValue())
            == java.lang.Float.floatToIntBits(
                other.getValue()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSensorType()) {
        hash = (37 * hash) + SENSORTYPE_FIELD_NUMBER;
        hash = (53 * hash) + sensorType_;
      }
      if (hasValue()) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getValue());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static test.SensorDataOuterClass.Sensor parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static test.SensorDataOuterClass.Sensor parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static test.SensorDataOuterClass.Sensor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static test.SensorDataOuterClass.Sensor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static test.SensorDataOuterClass.Sensor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static test.SensorDataOuterClass.Sensor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static test.SensorDataOuterClass.Sensor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static test.SensorDataOuterClass.Sensor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static test.SensorDataOuterClass.Sensor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static test.SensorDataOuterClass.Sensor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static test.SensorDataOuterClass.Sensor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static test.SensorDataOuterClass.Sensor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(test.SensorDataOuterClass.Sensor prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code test.Sensor}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:test.Sensor)
        test.SensorDataOuterClass.SensorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return test.SensorDataOuterClass.internal_static_test_Sensor_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return test.SensorDataOuterClass.internal_static_test_Sensor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                test.SensorDataOuterClass.Sensor.class, test.SensorDataOuterClass.Sensor.Builder.class);
      }

      // Construct using test.SensorDataOuterClass.Sensor.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        sensorType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return test.SensorDataOuterClass.internal_static_test_Sensor_descriptor;
      }

      public test.SensorDataOuterClass.Sensor getDefaultInstanceForType() {
        return test.SensorDataOuterClass.Sensor.getDefaultInstance();
      }

      public test.SensorDataOuterClass.Sensor build() {
        test.SensorDataOuterClass.Sensor result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public test.SensorDataOuterClass.Sensor buildPartial() {
        test.SensorDataOuterClass.Sensor result = new test.SensorDataOuterClass.Sensor(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sensorType_ = sensorType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof test.SensorDataOuterClass.Sensor) {
          return mergeFrom((test.SensorDataOuterClass.Sensor)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(test.SensorDataOuterClass.Sensor other) {
        if (other == test.SensorDataOuterClass.Sensor.getDefaultInstance()) return this;
        if (other.hasSensorType()) {
          setSensorType(other.getSensorType());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSensorType()) {
          return false;
        }
        if (!hasValue()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        test.SensorDataOuterClass.Sensor parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (test.SensorDataOuterClass.Sensor) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int sensorType_ = 0;
      /**
       * <code>required .test.Sensor.SensorType sensorType = 1 [default = UNKNOWN];</code>
       */
      public boolean hasSensorType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .test.Sensor.SensorType sensorType = 1 [default = UNKNOWN];</code>
       */
      public test.SensorDataOuterClass.Sensor.SensorType getSensorType() {
        test.SensorDataOuterClass.Sensor.SensorType result = test.SensorDataOuterClass.Sensor.SensorType.valueOf(sensorType_);
        return result == null ? test.SensorDataOuterClass.Sensor.SensorType.UNKNOWN : result;
      }
      /**
       * <code>required .test.Sensor.SensorType sensorType = 1 [default = UNKNOWN];</code>
       */
      public Builder setSensorType(test.SensorDataOuterClass.Sensor.SensorType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        sensorType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .test.Sensor.SensorType sensorType = 1 [default = UNKNOWN];</code>
       */
      public Builder clearSensorType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sensorType_ = 0;
        onChanged();
        return this;
      }

      private float value_ ;
      /**
       * <code>required float value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required float value = 2;</code>
       */
      public float getValue() {
        return value_;
      }
      /**
       * <code>required float value = 2;</code>
       */
      public Builder setValue(float value) {
        bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float value = 2;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:test.Sensor)
    }

    // @@protoc_insertion_point(class_scope:test.Sensor)
    private static final test.SensorDataOuterClass.Sensor DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new test.SensorDataOuterClass.Sensor();
    }

    public static test.SensorDataOuterClass.Sensor getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Sensor>
        PARSER = new com.google.protobuf.AbstractParser<Sensor>() {
      public Sensor parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Sensor(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Sensor> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Sensor> getParserForType() {
      return PARSER;
    }

    public test.SensorDataOuterClass.Sensor getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SensorDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:test.SensorData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .test.Sensor sensors = 1;</code>
     */
    boolean hasSensors();
    /**
     * <code>required .test.Sensor sensors = 1;</code>
     */
    test.SensorDataOuterClass.Sensor getSensors();
    /**
     * <code>required .test.Sensor sensors = 1;</code>
     */
    test.SensorDataOuterClass.SensorOrBuilder getSensorsOrBuilder();
  }
  /**
   * Protobuf type {@code test.SensorData}
   */
  public  static final class SensorData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:test.SensorData)
      SensorDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SensorData.newBuilder() to construct.
    private SensorData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SensorData() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SensorData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              test.SensorDataOuterClass.Sensor.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = sensors_.toBuilder();
              }
              sensors_ = input.readMessage(test.SensorDataOuterClass.Sensor.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sensors_);
                sensors_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return test.SensorDataOuterClass.internal_static_test_SensorData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return test.SensorDataOuterClass.internal_static_test_SensorData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              test.SensorDataOuterClass.SensorData.class, test.SensorDataOuterClass.SensorData.Builder.class);
    }

    private int bitField0_;
    public static final int SENSORS_FIELD_NUMBER = 1;
    private test.SensorDataOuterClass.Sensor sensors_;
    /**
     * <code>required .test.Sensor sensors = 1;</code>
     */
    public boolean hasSensors() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .test.Sensor sensors = 1;</code>
     */
    public test.SensorDataOuterClass.Sensor getSensors() {
      return sensors_ == null ? test.SensorDataOuterClass.Sensor.getDefaultInstance() : sensors_;
    }
    /**
     * <code>required .test.Sensor sensors = 1;</code>
     */
    public test.SensorDataOuterClass.SensorOrBuilder getSensorsOrBuilder() {
      return sensors_ == null ? test.SensorDataOuterClass.Sensor.getDefaultInstance() : sensors_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSensors()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getSensors().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getSensors());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSensors());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof test.SensorDataOuterClass.SensorData)) {
        return super.equals(obj);
      }
      test.SensorDataOuterClass.SensorData other = (test.SensorDataOuterClass.SensorData) obj;

      boolean result = true;
      result = result && (hasSensors() == other.hasSensors());
      if (hasSensors()) {
        result = result && getSensors()
            .equals(other.getSensors());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSensors()) {
        hash = (37 * hash) + SENSORS_FIELD_NUMBER;
        hash = (53 * hash) + getSensors().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static test.SensorDataOuterClass.SensorData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static test.SensorDataOuterClass.SensorData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static test.SensorDataOuterClass.SensorData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static test.SensorDataOuterClass.SensorData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static test.SensorDataOuterClass.SensorData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static test.SensorDataOuterClass.SensorData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static test.SensorDataOuterClass.SensorData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static test.SensorDataOuterClass.SensorData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static test.SensorDataOuterClass.SensorData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static test.SensorDataOuterClass.SensorData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static test.SensorDataOuterClass.SensorData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static test.SensorDataOuterClass.SensorData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(test.SensorDataOuterClass.SensorData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code test.SensorData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:test.SensorData)
        test.SensorDataOuterClass.SensorDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return test.SensorDataOuterClass.internal_static_test_SensorData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return test.SensorDataOuterClass.internal_static_test_SensorData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                test.SensorDataOuterClass.SensorData.class, test.SensorDataOuterClass.SensorData.Builder.class);
      }

      // Construct using test.SensorDataOuterClass.SensorData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSensorsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (sensorsBuilder_ == null) {
          sensors_ = null;
        } else {
          sensorsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return test.SensorDataOuterClass.internal_static_test_SensorData_descriptor;
      }

      public test.SensorDataOuterClass.SensorData getDefaultInstanceForType() {
        return test.SensorDataOuterClass.SensorData.getDefaultInstance();
      }

      public test.SensorDataOuterClass.SensorData build() {
        test.SensorDataOuterClass.SensorData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public test.SensorDataOuterClass.SensorData buildPartial() {
        test.SensorDataOuterClass.SensorData result = new test.SensorDataOuterClass.SensorData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (sensorsBuilder_ == null) {
          result.sensors_ = sensors_;
        } else {
          result.sensors_ = sensorsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof test.SensorDataOuterClass.SensorData) {
          return mergeFrom((test.SensorDataOuterClass.SensorData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(test.SensorDataOuterClass.SensorData other) {
        if (other == test.SensorDataOuterClass.SensorData.getDefaultInstance()) return this;
        if (other.hasSensors()) {
          mergeSensors(other.getSensors());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSensors()) {
          return false;
        }
        if (!getSensors().isInitialized()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        test.SensorDataOuterClass.SensorData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (test.SensorDataOuterClass.SensorData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private test.SensorDataOuterClass.Sensor sensors_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          test.SensorDataOuterClass.Sensor, test.SensorDataOuterClass.Sensor.Builder, test.SensorDataOuterClass.SensorOrBuilder> sensorsBuilder_;
      /**
       * <code>required .test.Sensor sensors = 1;</code>
       */
      public boolean hasSensors() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .test.Sensor sensors = 1;</code>
       */
      public test.SensorDataOuterClass.Sensor getSensors() {
        if (sensorsBuilder_ == null) {
          return sensors_ == null ? test.SensorDataOuterClass.Sensor.getDefaultInstance() : sensors_;
        } else {
          return sensorsBuilder_.getMessage();
        }
      }
      /**
       * <code>required .test.Sensor sensors = 1;</code>
       */
      public Builder setSensors(test.SensorDataOuterClass.Sensor value) {
        if (sensorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sensors_ = value;
          onChanged();
        } else {
          sensorsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .test.Sensor sensors = 1;</code>
       */
      public Builder setSensors(
          test.SensorDataOuterClass.Sensor.Builder builderForValue) {
        if (sensorsBuilder_ == null) {
          sensors_ = builderForValue.build();
          onChanged();
        } else {
          sensorsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .test.Sensor sensors = 1;</code>
       */
      public Builder mergeSensors(test.SensorDataOuterClass.Sensor value) {
        if (sensorsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              sensors_ != null &&
              sensors_ != test.SensorDataOuterClass.Sensor.getDefaultInstance()) {
            sensors_ =
              test.SensorDataOuterClass.Sensor.newBuilder(sensors_).mergeFrom(value).buildPartial();
          } else {
            sensors_ = value;
          }
          onChanged();
        } else {
          sensorsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .test.Sensor sensors = 1;</code>
       */
      public Builder clearSensors() {
        if (sensorsBuilder_ == null) {
          sensors_ = null;
          onChanged();
        } else {
          sensorsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .test.Sensor sensors = 1;</code>
       */
      public test.SensorDataOuterClass.Sensor.Builder getSensorsBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSensorsFieldBuilder().getBuilder();
      }
      /**
       * <code>required .test.Sensor sensors = 1;</code>
       */
      public test.SensorDataOuterClass.SensorOrBuilder getSensorsOrBuilder() {
        if (sensorsBuilder_ != null) {
          return sensorsBuilder_.getMessageOrBuilder();
        } else {
          return sensors_ == null ?
              test.SensorDataOuterClass.Sensor.getDefaultInstance() : sensors_;
        }
      }
      /**
       * <code>required .test.Sensor sensors = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          test.SensorDataOuterClass.Sensor, test.SensorDataOuterClass.Sensor.Builder, test.SensorDataOuterClass.SensorOrBuilder> 
          getSensorsFieldBuilder() {
        if (sensorsBuilder_ == null) {
          sensorsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              test.SensorDataOuterClass.Sensor, test.SensorDataOuterClass.Sensor.Builder, test.SensorDataOuterClass.SensorOrBuilder>(
                  getSensors(),
                  getParentForChildren(),
                  isClean());
          sensors_ = null;
        }
        return sensorsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:test.SensorData)
    }

    // @@protoc_insertion_point(class_scope:test.SensorData)
    private static final test.SensorDataOuterClass.SensorData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new test.SensorDataOuterClass.SensorData();
    }

    public static test.SensorDataOuterClass.SensorData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SensorData>
        PARSER = new com.google.protobuf.AbstractParser<SensorData>() {
      public SensorData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SensorData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SensorData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SensorData> getParserForType() {
      return PARSER;
    }

    public test.SensorDataOuterClass.SensorData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_test_Sensor_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_test_Sensor_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_test_SensorData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_test_SensorData_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020SensorData.proto\022\004test\"\334\001\n\006Sensor\0224\n\ns" +
      "ensorType\030\001 \002(\0162\027.test.Sensor.SensorType" +
      ":\007UNKNOWN\022\r\n\005value\030\002 \002(\002\"\214\001\n\nSensorType\022" +
      "\013\n\007UNKNOWN\020\000\022\006\n\002O2\020\001\022\006\n\002CO\020\002\022\007\n\003H2S\020\003\022\007\n" +
      "\003HCN\020\004\022\017\n\013TEMPERATURE\020\005\022\014\n\010HUMIDITY\020\006\022\020\n" +
      "\014AMBIENTLIGHT\020\007\022\014\n\010PRESSURE\020\010\022\020\n\014AMBIENT" +
      "NOISE\020\t\"+\n\nSensorData\022\035\n\007sensors\030\001 \002(\0132\014" +
      ".test.Sensor"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_test_Sensor_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_test_Sensor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_test_Sensor_descriptor,
        new java.lang.String[] { "SensorType", "Value", });
    internal_static_test_SensorData_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_test_SensorData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_test_SensorData_descriptor,
        new java.lang.String[] { "Sensors", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
