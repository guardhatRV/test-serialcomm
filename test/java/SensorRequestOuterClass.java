// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SensorRequest.proto

package test;

public final class SensorRequestOuterClass {
  private SensorRequestOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SensorRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:test.SensorRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .test.SensorRequest.RequestType request = 1 [default = GET_DATA];</code>
     */
    boolean hasRequest();
    /**
     * <code>required .test.SensorRequest.RequestType request = 1 [default = GET_DATA];</code>
     */
    test.SensorRequestOuterClass.SensorRequest.RequestType getRequest();

    /**
     * <code>required .test.SensorRequest.SensorType sensorType = 2 [default = UNKNOWN];</code>
     */
    boolean hasSensorType();
    /**
     * <code>required .test.SensorRequest.SensorType sensorType = 2 [default = UNKNOWN];</code>
     */
    test.SensorRequestOuterClass.SensorRequest.SensorType getSensorType();
  }
  /**
   * Protobuf type {@code test.SensorRequest}
   */
  public  static final class SensorRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:test.SensorRequest)
      SensorRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SensorRequest.newBuilder() to construct.
    private SensorRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SensorRequest() {
      request_ = 1;
      sensorType_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SensorRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              test.SensorRequestOuterClass.SensorRequest.RequestType value = test.SensorRequestOuterClass.SensorRequest.RequestType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                request_ = rawValue;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              test.SensorRequestOuterClass.SensorRequest.SensorType value = test.SensorRequestOuterClass.SensorRequest.SensorType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                sensorType_ = rawValue;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return test.SensorRequestOuterClass.internal_static_test_SensorRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return test.SensorRequestOuterClass.internal_static_test_SensorRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              test.SensorRequestOuterClass.SensorRequest.class, test.SensorRequestOuterClass.SensorRequest.Builder.class);
    }

    /**
     * Protobuf enum {@code test.SensorRequest.RequestType}
     */
    public enum RequestType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>GET_DATA = 1;</code>
       */
      GET_DATA(1),
      /**
       * <code>SET_DATA = 2;</code>
       */
      SET_DATA(2),
      ;

      /**
       * <code>GET_DATA = 1;</code>
       */
      public static final int GET_DATA_VALUE = 1;
      /**
       * <code>SET_DATA = 2;</code>
       */
      public static final int SET_DATA_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static RequestType valueOf(int value) {
        return forNumber(value);
      }

      public static RequestType forNumber(int value) {
        switch (value) {
          case 1: return GET_DATA;
          case 2: return SET_DATA;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<RequestType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          RequestType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<RequestType>() {
              public RequestType findValueByNumber(int number) {
                return RequestType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return test.SensorRequestOuterClass.SensorRequest.getDescriptor().getEnumTypes().get(0);
      }

      private static final RequestType[] VALUES = values();

      public static RequestType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private RequestType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:test.SensorRequest.RequestType)
    }

    /**
     * Protobuf enum {@code test.SensorRequest.SensorType}
     */
    public enum SensorType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNKNOWN = 0;</code>
       */
      UNKNOWN(0),
      /**
       * <code>O2 = 1;</code>
       */
      O2(1),
      /**
       * <code>CO = 2;</code>
       */
      CO(2),
      /**
       * <code>H2S = 3;</code>
       */
      H2S(3),
      /**
       * <code>HCN = 4;</code>
       */
      HCN(4),
      /**
       * <code>TEMPERATURE = 5;</code>
       */
      TEMPERATURE(5),
      /**
       * <code>HUMIDITY = 6;</code>
       */
      HUMIDITY(6),
      /**
       * <code>AMBIENTLIGHT = 7;</code>
       */
      AMBIENTLIGHT(7),
      /**
       * <code>PRESSURE = 8;</code>
       */
      PRESSURE(8),
      /**
       * <code>AMBIENTNOISE = 9;</code>
       */
      AMBIENTNOISE(9),
      ;

      /**
       * <code>UNKNOWN = 0;</code>
       */
      public static final int UNKNOWN_VALUE = 0;
      /**
       * <code>O2 = 1;</code>
       */
      public static final int O2_VALUE = 1;
      /**
       * <code>CO = 2;</code>
       */
      public static final int CO_VALUE = 2;
      /**
       * <code>H2S = 3;</code>
       */
      public static final int H2S_VALUE = 3;
      /**
       * <code>HCN = 4;</code>
       */
      public static final int HCN_VALUE = 4;
      /**
       * <code>TEMPERATURE = 5;</code>
       */
      public static final int TEMPERATURE_VALUE = 5;
      /**
       * <code>HUMIDITY = 6;</code>
       */
      public static final int HUMIDITY_VALUE = 6;
      /**
       * <code>AMBIENTLIGHT = 7;</code>
       */
      public static final int AMBIENTLIGHT_VALUE = 7;
      /**
       * <code>PRESSURE = 8;</code>
       */
      public static final int PRESSURE_VALUE = 8;
      /**
       * <code>AMBIENTNOISE = 9;</code>
       */
      public static final int AMBIENTNOISE_VALUE = 9;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SensorType valueOf(int value) {
        return forNumber(value);
      }

      public static SensorType forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN;
          case 1: return O2;
          case 2: return CO;
          case 3: return H2S;
          case 4: return HCN;
          case 5: return TEMPERATURE;
          case 6: return HUMIDITY;
          case 7: return AMBIENTLIGHT;
          case 8: return PRESSURE;
          case 9: return AMBIENTNOISE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<SensorType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          SensorType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<SensorType>() {
              public SensorType findValueByNumber(int number) {
                return SensorType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return test.SensorRequestOuterClass.SensorRequest.getDescriptor().getEnumTypes().get(1);
      }

      private static final SensorType[] VALUES = values();

      public static SensorType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private SensorType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:test.SensorRequest.SensorType)
    }

    private int bitField0_;
    public static final int REQUEST_FIELD_NUMBER = 1;
    private int request_;
    /**
     * <code>required .test.SensorRequest.RequestType request = 1 [default = GET_DATA];</code>
     */
    public boolean hasRequest() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .test.SensorRequest.RequestType request = 1 [default = GET_DATA];</code>
     */
    public test.SensorRequestOuterClass.SensorRequest.RequestType getRequest() {
      test.SensorRequestOuterClass.SensorRequest.RequestType result = test.SensorRequestOuterClass.SensorRequest.RequestType.valueOf(request_);
      return result == null ? test.SensorRequestOuterClass.SensorRequest.RequestType.GET_DATA : result;
    }

    public static final int SENSORTYPE_FIELD_NUMBER = 2;
    private int sensorType_;
    /**
     * <code>required .test.SensorRequest.SensorType sensorType = 2 [default = UNKNOWN];</code>
     */
    public boolean hasSensorType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .test.SensorRequest.SensorType sensorType = 2 [default = UNKNOWN];</code>
     */
    public test.SensorRequestOuterClass.SensorRequest.SensorType getSensorType() {
      test.SensorRequestOuterClass.SensorRequest.SensorType result = test.SensorRequestOuterClass.SensorRequest.SensorType.valueOf(sensorType_);
      return result == null ? test.SensorRequestOuterClass.SensorRequest.SensorType.UNKNOWN : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasRequest()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSensorType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, request_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, sensorType_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, request_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, sensorType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof test.SensorRequestOuterClass.SensorRequest)) {
        return super.equals(obj);
      }
      test.SensorRequestOuterClass.SensorRequest other = (test.SensorRequestOuterClass.SensorRequest) obj;

      boolean result = true;
      result = result && (hasRequest() == other.hasRequest());
      if (hasRequest()) {
        result = result && request_ == other.request_;
      }
      result = result && (hasSensorType() == other.hasSensorType());
      if (hasSensorType()) {
        result = result && sensorType_ == other.sensorType_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRequest()) {
        hash = (37 * hash) + REQUEST_FIELD_NUMBER;
        hash = (53 * hash) + request_;
      }
      if (hasSensorType()) {
        hash = (37 * hash) + SENSORTYPE_FIELD_NUMBER;
        hash = (53 * hash) + sensorType_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static test.SensorRequestOuterClass.SensorRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static test.SensorRequestOuterClass.SensorRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static test.SensorRequestOuterClass.SensorRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static test.SensorRequestOuterClass.SensorRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static test.SensorRequestOuterClass.SensorRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static test.SensorRequestOuterClass.SensorRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static test.SensorRequestOuterClass.SensorRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static test.SensorRequestOuterClass.SensorRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static test.SensorRequestOuterClass.SensorRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static test.SensorRequestOuterClass.SensorRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static test.SensorRequestOuterClass.SensorRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static test.SensorRequestOuterClass.SensorRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(test.SensorRequestOuterClass.SensorRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code test.SensorRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:test.SensorRequest)
        test.SensorRequestOuterClass.SensorRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return test.SensorRequestOuterClass.internal_static_test_SensorRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return test.SensorRequestOuterClass.internal_static_test_SensorRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                test.SensorRequestOuterClass.SensorRequest.class, test.SensorRequestOuterClass.SensorRequest.Builder.class);
      }

      // Construct using test.SensorRequestOuterClass.SensorRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        request_ = 1;
        bitField0_ = (bitField0_ & ~0x00000001);
        sensorType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return test.SensorRequestOuterClass.internal_static_test_SensorRequest_descriptor;
      }

      public test.SensorRequestOuterClass.SensorRequest getDefaultInstanceForType() {
        return test.SensorRequestOuterClass.SensorRequest.getDefaultInstance();
      }

      public test.SensorRequestOuterClass.SensorRequest build() {
        test.SensorRequestOuterClass.SensorRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public test.SensorRequestOuterClass.SensorRequest buildPartial() {
        test.SensorRequestOuterClass.SensorRequest result = new test.SensorRequestOuterClass.SensorRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.request_ = request_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sensorType_ = sensorType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof test.SensorRequestOuterClass.SensorRequest) {
          return mergeFrom((test.SensorRequestOuterClass.SensorRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(test.SensorRequestOuterClass.SensorRequest other) {
        if (other == test.SensorRequestOuterClass.SensorRequest.getDefaultInstance()) return this;
        if (other.hasRequest()) {
          setRequest(other.getRequest());
        }
        if (other.hasSensorType()) {
          setSensorType(other.getSensorType());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRequest()) {
          return false;
        }
        if (!hasSensorType()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        test.SensorRequestOuterClass.SensorRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (test.SensorRequestOuterClass.SensorRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int request_ = 1;
      /**
       * <code>required .test.SensorRequest.RequestType request = 1 [default = GET_DATA];</code>
       */
      public boolean hasRequest() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .test.SensorRequest.RequestType request = 1 [default = GET_DATA];</code>
       */
      public test.SensorRequestOuterClass.SensorRequest.RequestType getRequest() {
        test.SensorRequestOuterClass.SensorRequest.RequestType result = test.SensorRequestOuterClass.SensorRequest.RequestType.valueOf(request_);
        return result == null ? test.SensorRequestOuterClass.SensorRequest.RequestType.GET_DATA : result;
      }
      /**
       * <code>required .test.SensorRequest.RequestType request = 1 [default = GET_DATA];</code>
       */
      public Builder setRequest(test.SensorRequestOuterClass.SensorRequest.RequestType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        request_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .test.SensorRequest.RequestType request = 1 [default = GET_DATA];</code>
       */
      public Builder clearRequest() {
        bitField0_ = (bitField0_ & ~0x00000001);
        request_ = 1;
        onChanged();
        return this;
      }

      private int sensorType_ = 0;
      /**
       * <code>required .test.SensorRequest.SensorType sensorType = 2 [default = UNKNOWN];</code>
       */
      public boolean hasSensorType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .test.SensorRequest.SensorType sensorType = 2 [default = UNKNOWN];</code>
       */
      public test.SensorRequestOuterClass.SensorRequest.SensorType getSensorType() {
        test.SensorRequestOuterClass.SensorRequest.SensorType result = test.SensorRequestOuterClass.SensorRequest.SensorType.valueOf(sensorType_);
        return result == null ? test.SensorRequestOuterClass.SensorRequest.SensorType.UNKNOWN : result;
      }
      /**
       * <code>required .test.SensorRequest.SensorType sensorType = 2 [default = UNKNOWN];</code>
       */
      public Builder setSensorType(test.SensorRequestOuterClass.SensorRequest.SensorType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        sensorType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .test.SensorRequest.SensorType sensorType = 2 [default = UNKNOWN];</code>
       */
      public Builder clearSensorType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sensorType_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:test.SensorRequest)
    }

    // @@protoc_insertion_point(class_scope:test.SensorRequest)
    private static final test.SensorRequestOuterClass.SensorRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new test.SensorRequestOuterClass.SensorRequest();
    }

    public static test.SensorRequestOuterClass.SensorRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SensorRequest>
        PARSER = new com.google.protobuf.AbstractParser<SensorRequest>() {
      public SensorRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SensorRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SensorRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SensorRequest> getParserForType() {
      return PARSER;
    }

    public test.SensorRequestOuterClass.SensorRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_test_SensorRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_test_SensorRequest_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023SensorRequest.proto\022\004test\"\302\002\n\rSensorRe" +
      "quest\022:\n\007request\030\001 \002(\0162\037.test.SensorRequ" +
      "est.RequestType:\010GET_DATA\022;\n\nsensorType\030" +
      "\002 \002(\0162\036.test.SensorRequest.SensorType:\007U" +
      "NKNOWN\")\n\013RequestType\022\014\n\010GET_DATA\020\001\022\014\n\010S" +
      "ET_DATA\020\002\"\214\001\n\nSensorType\022\013\n\007UNKNOWN\020\000\022\006\n" +
      "\002O2\020\001\022\006\n\002CO\020\002\022\007\n\003H2S\020\003\022\007\n\003HCN\020\004\022\017\n\013TEMPE" +
      "RATURE\020\005\022\014\n\010HUMIDITY\020\006\022\020\n\014AMBIENTLIGHT\020\007" +
      "\022\014\n\010PRESSURE\020\010\022\020\n\014AMBIENTNOISE\020\t"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_test_SensorRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_test_SensorRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_test_SensorRequest_descriptor,
        new java.lang.String[] { "Request", "SensorType", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
